
http://www.geospatialtraining.com/index.php?option=com_catalog&view=node&id=117%3Aprogramming-arcgis-10-1-with-python-workshop&Itemid=117

Course modules include:
- Fundamentals of the Python Language for ArcGIS
- Writing Basic Geoprocessing Scripts with ArcPy
- Managing Map Documents and Layers
- Finding and Fixing Broken Data Links
- Automating Map Production and Printing
- Executing Geoprocessing Tools from Scripts
- Creating Custom Geoprocessing Tools
- Querying and Selecting Data
- Using the Arcpy Data Access Module to Select, Insert, and Update Geographic Data and Tables
- Listing and Describing GIS Data
- Customizing the ArcGIS Interface with Add-Ins
- Error Handling and Troubleshooting
- Automating Python Scripts
- 5 Things Every GIS Programmer Should Know How to Do with Python
 
<hr>
Some of the exercises:
Python language fundamentals
Using the ArcGIS Python window
Executing tools from a script
Referencing the current map document and map documents on a local or remote drive
Accessing a data frame
Getting a list of layers and tables in a map document
Restricting the list of layers returned  
Changing the map extent
Adding layers to a map document or layer file
Inserting layers in a map document
Updating layer symbology
Updating layer properties
Finding and fixing all broken data sources in map document files
Finding all broken data sources in all map documents in a folder
Fixing individual layer and table objects with broken data sources
Updating layout element properties
Programmatically printing maps
Exporting maps to PDF and image files
Creating map books
Using the output of one tool as input to another tool
Setting environment variables and examining tool messages
Creating a custom geoprocessing tool
Constructing proper attribute query syntax
Creating feature layers and table views
Selecting features and rows with the Select by Attribute tool
Selecting features with the Select by Location tool
Combining spatial and attribute queries
Retrieving data from tables and feature classes with SearchCursor
Filtering records with a where clause
Improving cursor performance with Geometry tokens
Inserting records into tables and feature classes with InsertCursor
Updating records in tables and feature classes with UpdateCursor
Deleting records from tables and feature classes with UpdateCursor
Using edit sessions to wrap insert and update operations
Reading geometry from a feature class
Getting and restricting a list of feature classes from a workspace
Getting a list of fields from a feature class or table
Using the Describe() function to return descriptive information about a feature class or image
Creating ArcGIS Desktop add-ins with Python
Adding Python error handling structures to your scripts
Retrieving tool messages
Adding Python scripts to batch files
Scheduling batch files to run at prescribed times
Reading data from a delimited text file
Sending email from a script
Programmatically retrieving files from an FTP server
Creating zip files
